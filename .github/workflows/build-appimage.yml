name: Build Signal AppImage

on:
  workflow_dispatch:
    inputs:
      ref:
        description: "Git ref: tag/branch/commit (e.g. v7.71.0 or main)"
        required: false
        default: "main"

jobs:
  build-linux-appimage:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout (with LFS)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          lfs: true
          ref: ${{ github.event.inputs.ref }}

      - name: Install base tools
        run: |
          sudo apt-get update
          sudo apt-get install -y jq libarchive-tools rpm fakeroot

      - name: Setup Node (from .nvmrc)
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"

      - name: Enable Corepack & pin pnpm from package.json
        run: |
          corepack enable
          # вытащим версию pnpm из package.json: поле "packageManager": "pnpm@X.Y.Z"
          PNPM_VER=$(jq -r '.packageManager|capture("pnpm@(?<v>[^+]+)").v' package.json)
          echo "Using pnpm@$PNPM_VER"
          corepack use "pnpm@$PNPM_VER"
          pnpm --version

      - name: Get pnpm store path
        id: pnpm-store
        run: echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Cache pnpm store
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-store.outputs.STORE_PATH }}
          key: pnpm-${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            pnpm-${{ runner.os }}-

      - name: Install deps
        run: |
          git lfs install
          pnpm install --frozen-lockfile

      - name: Build sticker-creator (optional)
        run: |
          if [ -f sticker-creator/package.json ]; then
            pnpm --prefix ./sticker-creator/ install --frozen-lockfile
            pnpm --prefix ./sticker-creator/ run build
          fi

      - name: Generate sources
        run: pnpm run generate

      - name: Build AppImage (electron-builder, no publish)
        run: |
          pnpm exec electron-builder \
            --linux AppImage \
            --config.linux.target=AppImage \
            --publish=never \
            --config.extraMetadata.environment=production \
            --config.directories.output=release

      - name: List artifacts
        run: ls -l release || true

      - name: Upload AppImage
        uses: actions/upload-artifact@v4
        with:
          name: Signal-AppImage
          path: release/*.AppImage
          if-no-files-found: error
          retention-days: 14
